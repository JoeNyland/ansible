---
docker_users:
  - joe
dovecot_mailbox_location: maildir:~/.maildir
dovecot_auth_username_format: '%Ln'
# Run zfsunlock automatically in initramfs to unlock root pool
dropbear_initramfs_options: '-c /usr/bin/zfsunlock'
dropbear_initramfs_ssh_authorized_keys:
  - https://github.com/joenyland.keys
hostname: Server
hostname_aliases:
  - ca.home.joe.nyland.io
  - ha.home.joe.nyland.io
  - imap.home.joe.nyland.io
  - smtp.home.joe.nyland.io
domain: home.joe.nyland.io
postfix_aliases:
  mailer-daemon: postmaster
  postmaster: root
  nobody: root
  hostmaster: root
  usenet: root
  news: root
  webmaster: root
  www: root
  ftp: root
  abuse: root
  noc: root
  security: root
  root: joe
  syncoid: joe
postfix_destinations:
  - localhost
  - "{{ ansible_hostname }}"
  - "{{ ansible_fqdn }}"
  - "{{ ansible_domain }}"
postfix_inet_interfaces: all
postfix_mailbox_transport: lmtp:unix:private/dovecot-lmtp
postfix_networks:
  - "127.0.0.0/8"
  - "172.17.0.0/16"
  - "10.10.0.0/16" # LAN
  - "10.8.0.0/24"  # VPN
  - "10.8.1.0/24"  # Cloud
  - "[::ffff:127.0.0.0]/104"
  - "[::1]/128"
  - "[fc00:f00d:cafe:10::]/64"  # LAN
  - "[fc00:f00d:cafe:8::]/80"   # VPN
  - "[fc00:f00d:cafe:8:1::]/80" # Cloud
postfix_relay_host:
  host: smtp.postmarkapp.com
  port: 587
  sasl_auth_enabled: true
postfix_smtpd_tls_cert_file: /etc/letsencrypt/live/server/fullchain.pem
postfix_smtpd_tls_key_file: /etc/letsencrypt/live/server/privkey.pem
nfs_exports:
  /downloads:
    client_permissions:
      fc00:f00d:cafe:10::/64:
        - rw # Allow read/write access
        - insecure # Allow ports >1025 (mainly for macOS compatibility)
        - crossmnt # Allow mounts inside /tank to be visible
        - no_root_squash # Do not squash root user access to the anonymous user
      10.10.0.0/16:
        - rw # Allow read/write access
        - insecure # Allow ports >1025 (mainly for macOS compatibility)
        - crossmnt # Allow mounts inside /tank to be visible
        - no_root_squash # Do not squash root user access to the anonymous user
  /home:
    client_permissions:
      fc00:f00d:cafe:10::/64:
        - rw # Allow read/write access
        - insecure # Allow ports >1025 (mainly for macOS compatibility
        - crossmnt # Allow mounts inside /home to be visible
        - no_root_squash # Do not squash root user access to the anonymous user
      10.10.0.0/16:
        - rw # Allow read/write access
        - insecure # Allow ports >1025 (mainly for macOS compatibility
        - crossmnt # Allow mounts inside /home to be visible
        - no_root_squash # Do not squash root user access to the anonymous user
  /tank:
    client_permissions:
      fc00:f00d:cafe:10::/64:
        - rw # Allow read/write access
        - insecure # Allow ports >1025 (mainly for macOS compatibility)
        - crossmnt # Allow mounts inside /tank to be visible
        - no_root_squash # Do not squash root user access to the anonymous user
      10.10.0.0/16:
        - rw # Allow read/write access
        - insecure # Allow ports >1025 (mainly for macOS compatibility)
        - crossmnt # Allow mounts inside /tank to be visible
        - no_root_squash # Do not squash root user access to the anonymous user
samba_shares:
  downloads:
    path: /downloads
    valid_users: joe
    read_only: false
  tank:
    path: /tank
    valid_users: joe
    read_only: false
sanoid_templates:
  bpool:
    autosnap: 'yes'
    autoprune: 'yes'
    frequently: 0
    hourly: 0
    daily: 30
    monthly: 3
    yearly: 0
  rpool:
    autosnap: 'yes'
    autoprune: 'yes'
    frequently: 0
    hourly: 0
    daily: 30
    monthly: 3
    yearly: 0
  none:
    autosnap: 'no'
    autoprune: 'no'
    frequently: 0
    hourly: 0
    daily: 0
    monthly: 0
    yearly: 0
sanoid_policies:
  bpool:
    use_template: bpool
    recursive: 'yes'
  rpool:
    use_template: rpool
    recursive: 'yes'
  rpool/tank/downloads:
    use_template: none
    recursive: 'yes'
off_site_backup_destination_host: backup-pi
off_site_backup_source_host: server.home.joe.nyland.io
zfs_datasets:
  # Boot
  bpool:
    devices: 'off'
    acltype: posix
    xattr: sa
    compression: lz4
    normalization: formD
    relatime: 'on'
    canmount: 'off'
    mountpoint: /boot
  bpool/BOOT:
    canmount: 'off'
    mountpoint: none
  bpool/BOOT/debian:
    mountpoint: /boot

  # Root
  rpool:
    encryption: aes-256-gcm
    keylocation: prompt
    keyformat: passphrase
    acltype: posix
    xattr: sa
    dnodesize: auto
    compression: lz4
    normalization: formD
    relatime: 'on'
    canmount: 'off'
    mountpoint: /
  rpool/ROOT:
    canmount: 'off'
    mountpoint: 'none'
  rpool/ROOT/debian:
    canmount: noauto
    mountpoint: /
  rpool/tank:
  rpool/tank/archive:
  rpool/tank/archive/apps:
  rpool/tank/archive/certificates:
  rpool/tank/archive/drivers:
  rpool/tank/archive/firmware:
  rpool/tank/archive/gaming:
  rpool/tank/archive/manuals:
  rpool/tank/archive/os:
  rpool/tank/archive/vms:
  rpool/tank/backups:
  rpool/tank/backups/images:
  rpool/containers:
  rpool/containers/bazarr:
  rpool/containers/home-assistant:
  rpool/containers/lidarr:
  rpool/containers/plex:
  rpool/containers/portainer:
  rpool/containers/prowlarr:
  rpool/containers/qbittorrent:
  rpool/containers/radarr:
  rpool/containers/sabnzbd:
  rpool/containers/sonarr:
  rpool/containers/stash:
  rpool/containers/step-ca:
  rpool/containers/tautulli:
  rpool/containers/uptime-kuma:
  rpool/containers/whisparr:
  new-rpool/downloads:
    syncoid:sync: 'false'
    compression: 'off'
  rpool/tank/home:
    mountpoint: /home
  rpool/tank/home/joe:
  rpool/tank/home/root:
    mountpoint: /root
  rpool/tank/media/audiobooks:
  rpool/tank/media/movies:
  rpool/tank/media/music:
  rpool/tank/media/photos:
  rpool/tank/media/recordings:
  rpool/tank/media/sport:
  rpool/tank/media/tv:
  rpool/tank/media/videos:
  rpool/tank/media/youtube:
  rpool/var:
    canmount: 'off'
  rpool/var/lib:
    canmount: 'off'
  rpool/var/lib/docker:
    syncoid:sync: 'false'
  new-rpool/var/lib/docker:
    com.sun:auto-snapshot: false
  rpool/var/log:
  rpool/var/spool:
